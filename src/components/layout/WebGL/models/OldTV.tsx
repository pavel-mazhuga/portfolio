/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 old_tv.glb -t -T -D
Author: tinderboxh (https://sketchfab.com/tinderboxh)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/old-tv-8ee8454ea06b47f1b204dfefb7af8e24
Title: Old TV
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Object_2: THREE.Mesh;
    };
    materials: {
        material_0: THREE.MeshPhysicalMaterial;
    };
};

function OldTV(props: JSX.IntrinsicElements['group']) {
    // const { nodes, materials } = useGLTF('/gltf/old_tv.glb') as GLTFResult;
    const { nodes, materials } = useGLTF('/gltf/old_tv-transformed.glb') as GLTFResult;

    return (
        <group {...props} dispose={null} scale={[0.05, 0.05, 0.05]}>
            <mesh geometry={nodes.Object_2.geometry} material={materials.material_0} rotation={[-Math.PI / 2, 0, 0]}>
                {/* <meshBasicMaterial /> */}
            </mesh>
            {/* <mesh geometry={nodes.Object_2.geometry} material={materials.material_0} rotation={[-Math.PI / 2, 0, 0]} /> */}
        </group>
    );
}

export default OldTV;

useGLTF.preload('/old_tv-transformed.glb');
