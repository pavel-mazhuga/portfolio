/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 sitting-person.glb -t -T
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Baarijakkara_LOW__0: THREE.Mesh
    rp_carla_rigged_001_geo_rp_carla_rigged_001_mat_0: THREE.Mesh
  }
  materials: {
    black: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/sitting-person-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.03}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.Baarijakkara_LOW__0.geometry} material={materials.black} position={[0, -0.13, 0]} scale={0.94} />
          </group>
        </group>
      </group>
      <mesh geometry={nodes.rp_carla_rigged_001_geo_rp_carla_rigged_001_mat_0.geometry} material={materials.black} scale={0.04} />
    </group>
  )
}

useGLTF.preload('/sitting-person-transformed.glb')
